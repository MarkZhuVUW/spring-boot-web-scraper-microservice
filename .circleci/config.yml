version: 2.1

jobs:
  testnbuild:
    docker:
      - image: cimg/openjdk:17.0.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }} # appends cache key with a hash of pom.xml file
      - run:
          name: Build Spring Boot app
          command: |
            mvn -Pprod -f ./pom.xml clean install -DskipTests
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Copy  files to root folder
          command: |
            cp ./webscraper-api/target/*-exec.jar ./api.jar
            cp ./webscraper-client/target/*-SNAPSHOT.jar ./client.jar

      - persist_to_workspace:
          root: ./
          paths:
            - api.jar
            - client.jar

  deploy-to-docker-hub:
    machine:
      image: ubuntu-2004:202111-02
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: set up env vars and push docker image to Docker Hub
          command: |
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            cd ./deployment
            chmod +x deploy-docker-hub.sh
            ./deploy-docker-hub.sh

  deploy-jar-to-github-releases:
    docker:
      - image: circleci/golang:1.10
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Copy api.jar and client.jar to artifacts folder and release it to GitHub
          command: |
            cd ./deployment
            chmod +x deploy-github-releases.sh
            ./deploy-github-releases.sh
  deploy-ecs:
    machine:
      image: ubuntu-2004:202111-02
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: AWS configure
          command: |
            mkdir ~/.aws
            chmod -R 755 ~/.aws
            cp .circleci/aws_config ~/.aws/config
      - run:
          name: Install aws cli through python to always get the latest verison
          command: |
            sudo apt-get update
            sudo apt-get install awscli
      - run:
          name: assume role and force update ecs service to get latest change in docker image.
          command: |
            ls
            chmod +x deploy-ecs.sh
            ./deploy-ecs.sh
workflows:
  test-build-deploy:
    jobs:
      - testnbuild
      - deploy-to-docker-hub:
          requires:
            - testnbuild
      - deploy-jar-to-github-releases:
          requires:
            - testnbuild
#          filters:
#            branches:
#              only: master
      - deploy-ecs:
          requires:
            - testnbuild
            - deploy-to-docker-hub
#          filters:
#            branches:
#              only: master